<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-09-11T09:27:13.368Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>mapleChain</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>钱包开发_BTC_node版本</title>
    <link href="http://yoursite.com/2018/08/09/%E6%95%B0%E5%AD%97%E8%B4%A7%E5%B8%81BTC%E5%BC%80%E5%8F%91-node%E7%89%88%E6%9C%AC/"/>
    <id>http://yoursite.com/2018/08/09/数字货币BTC开发-node版本/</id>
    <published>2018-08-09T11:38:25.000Z</published>
    <updated>2018-09-11T09:27:13.368Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、BTC"><a href="#1、BTC" class="headerlink" title="1、BTC"></a>1、BTC</h2><p>比特币是一种点对点的电子现金系统。比特币是一种由开源的P2P软件产生的加密货币或电子货币。通俗点讲就是利用你挖矿设备的算力计算数学难题，在网络上确认交易，比特币网络会根据你解决数学难题的多少给你一定的的比特币奖励。</p><p>BitCoin的概念最初由中本聪在2009年提出，根据中本聪的思路设计发布的开源软件以及建构其上的P2P网络。比特币是一种P2P形式的数字货币。点对点的传输意味着一个去中心化的支付系统。<br>与大多数货币不同，比特币不依靠特定货币机构发行，它依据特定算法，通过大量的计算产生，比特币经济使用整个P2P网络中众多节点构成的分布式数据库来确认并记录所有的交易行为，并使用密码学的设计来确保货币流通各个环节安全性。</p><p>P2P的去中心化特性与算法本身可以确保无法通过大量制造比特币来人为操控币值。基于密码学的设计可以使比特币只能被真实的拥有者转移或支付。这同样确保了货币所有权与流通交易的匿名性。比特币与其他虚拟货币最大的不同，是其总数量非常有限，具有极强的稀缺性。该货币系统曾在4年内只有不超过1050万个，之后的总数量将被永久限制在2100万个。<br>比特币可以用来兑现，可以兑换成大多数国家的货币。使用者可以用比特币购买一些虚拟物品，比如网络游戏当中的衣服、帽子、装备等，只要有人接受，也可以使用比特币购买现实生活当中的物品。</p><p>参考链接：</p><p><a href="https://www.8btc.com/wiki/bitcoin-a-peer-to-peer-electronic-cash-system/" target="_blank" rel="noopener">比特币白皮书</a>、<br><a href="https://www.zhihu.com/question/20876219?rf=21949045" target="_blank" rel="noopener">比特币是什么</a></p><h2 id="2、BTC交易与钱包开发"><a href="#2、BTC交易与钱包开发" class="headerlink" title="2、BTC交易与钱包开发"></a>2、BTC交易与钱包开发</h2><p>目前有场外交易和场内交易两种，场外即OTC市场交易，选择靠谱买、卖家进行交易。场内是目前主流方式，包括各大交易所，火币，币安等；具体买卖不在这里说明。进行数字货币交易需要交易所，其中充值提现属于钱包开发。钱包开发是连接区块链的一个入口。目前比较成熟的公链，如比特币、以太坊都有很多钱包可以选择。一般钱包需要完全访问你的用户资产，也就是会要求你输入私钥。钱包的作恶成本极低，这也是笔者建议选择开源钱包的原因之一。</p><p>其中btc开发，前提需要了解RPC。远程过程调用（英语：Remote Procedure Call，缩写为 RPC）是一个计算机通信协议。该协议允许运行于一台计算机的程序调用另一台计算机的子程序，而程序员无需额外地为这个交互作用编程。如果涉及的软件采用面向对象编程，那么远程过程调用亦可称作远程调用或远程方法调用。RPC 的主要功能目标是让构建分布式计算（应用）更容易，在提供强大的远程调用能力时不损失本地调用的语义简洁性。</p><p>btc提供了一系列rpc接口，比如<a href="https://en.bitcoin.it/wiki/Original_Bitcoin_client/API_calls_list" target="_blank" rel="noopener">RPC接口文档</a>，以 sendrawtransaction 为例，这个函数列表提供了四列（Command、Parameters、Description、Requires unlocked wallet? ），分别表示函数名、传入参数、描述、是否需要解锁钱包。同时，为了保证安全性，我们还需要比特币的正式节点和测试节点，这样就可以利用 RPC 进行接口调用，来和区块链网络进行交互。</p><p>参考链接：<br><a href="https://www.zhihu.com/question/266043467" target="_blank" rel="noopener">btc交易</a></p><h2 id="3、btc开发-node"><a href="#3、btc开发-node" class="headerlink" title="3、btc开发_node"></a>3、btc开发_node</h2><p>读完以上入门知识，接下来简单介绍下btc开发充值相关，nodeJs开发流程就不在这里详述。</p><h4 id="1-准备npm第三方依赖包。"><a href="#1-准备npm第三方依赖包。" class="headerlink" title="1. 准备npm第三方依赖包。"></a>1. 准备npm第三方依赖包。</h4><a id="more"></a><p>“bigi”:大整数处理；</p><p>“bitcoin-core”: btc核心包，执行区块链交互等</p><p>“bitcoin-convert”: 便于btc和聪的转换等</p><p>“bitcoinjs-lib”: 功能封装库</p><h4 id="2-创建地址及验证"><a href="#2-创建地址及验证" class="headerlink" title="2. 创建地址及验证"></a>2. 创建地址及验证</h4><p>每个钱包属于都有自己的地址和私钥。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">const bitcoin = require(&apos;bitcoinjs-lib&apos;)</span><br><span class="line">const bigi = require(&apos;bigi&apos;)</span><br><span class="line">const network = bitcoin.networks.bitcoin</span><br><span class="line"></span><br><span class="line">if (appConfig.bitcoin.testnet) &#123;</span><br><span class="line">    network = bitcoin.networks.testnet //初始化客户端</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">const string = random.randomString(1048)  //随机生成1048位字符串</span><br><span class="line">const hash = bitcoin.crypto.sha256(string) //加密</span><br><span class="line">const d = bigi.fromBuffer(hash) //buffer转换</span><br><span class="line"></span><br><span class="line">const keyPair = new bitcoin.ECPair(d, null, &#123; network: network &#125;)</span><br><span class="line">const privateKey = keyPair.toWIF() //得到私钥</span><br><span class="line">const publicAddress = keyPair.getAddress() //得到地址</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">//最后，为了安全性我们还需要把生成的地址添加到自己的节点上</span><br><span class="line">/**</span><br><span class="line"> * 添加到节点监控</span><br><span class="line"> * @param &#123;*特币地址&#125; address</span><br><span class="line"> * @param &#123;*账户，默认空&#125; account</span><br><span class="line"> * @param &#123;*是否重新扫描区块链，true非常耗时，不建议&#125; rescan</span><br><span class="line"> */</span><br><span class="line">function addToWatch(address, account, rescan) &#123;</span><br><span class="line">    account = account || &quot;&quot;;</span><br><span class="line">    rescan = rescan || false;</span><br><span class="line">    return new Promise(function (resolve, reject) &#123;</span><br><span class="line">        client.importAddress(address, account, rescan, function (err, result) &#123;</span><br><span class="line">            if (err) &#123;</span><br><span class="line">                return reject(err);</span><br><span class="line">            &#125;</span><br><span class="line">            resolve(address);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-交易生成"><a href="#3-交易生成" class="headerlink" title="3. 交易生成"></a>3. 交易生成</h4><p>给一个btc地址转账，前提是需要一个余额充足的账户，这里需要该账户地址和私钥，并根据该地址未花费交易个数，进行签名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 获取比特币地址的utxo</span><br><span class="line"> * @param &#123;*&#125; addresses</span><br><span class="line"> * @param &#123;*&#125; minConfirmations</span><br><span class="line"> * @param &#123;*&#125; maxConfirmations</span><br><span class="line"> */</span><br><span class="line">function listUnspent(addresses, minConfirmations, maxConfirmations) &#123;</span><br><span class="line">    minConfirmations = minConfirmations || 0;</span><br><span class="line">    maxConfirmations = maxConfirmations || 1024; //大约一周</span><br><span class="line">    if (!Array.isArray(addresses)) &#123;</span><br><span class="line">        if (addresses) &#123;</span><br><span class="line">            addresses = [addresses];</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            addresses = [];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return new Promise(function (resolve, reject) &#123;</span><br><span class="line">        if (!addresses.length) &#123;</span><br><span class="line">            reject(new Error(&apos;addresses is required&apos;));</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        client.listUnspent(minConfirmations, maxConfirmations, addresses, function (err, results) &#123;</span><br><span class="line">            if (err) &#123;</span><br><span class="line">                return reject(err);</span><br><span class="line">            &#125;</span><br><span class="line">            resolve(results);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">const A; //转出地址</span><br><span class="line">const A_pk // A地址私钥</span><br><span class="line">const B; //转账地址</span><br><span class="line">const unspents; //根据以上api获取的A地址的utxo</span><br><span class="line"></span><br><span class="line">const tx = new bitcoin.TransactionBuilder(network); //交易构建</span><br><span class="line">const totalInCount = unspents.length; //获取A地址的utxo</span><br><span class="line">for (var i = 0; i &lt; unspents.length; i++) &#123; // 如果多个utxo，则使用循环</span><br><span class="line">    totalIn += btcConvert(unspents[i].amount, &apos;BTC&apos;, &apos;Satoshi&apos;); //单位转换</span><br><span class="line">    tx.addInput(unspents[i].txid, unspents[i].vout); //添加input</span><br><span class="line">&#125;</span><br><span class="line">tx.addOutput(B, amount); //amount表示需要转账的金额</span><br><span class="line">const fee = getTransactionFee(inputsLength, outputsLength) //获取实时手续费，参考 api：estimateFee;</span><br><span class="line">const keyPair = bitcoin.ECPair.fromWIF(pk, network); //钱包创建</span><br><span class="line">for (var i = 0; i &lt; totalInCount; i++) &#123;</span><br><span class="line">    tx.sign(i, keyPair); // 交易签名</span><br><span class="line">&#125;</span><br><span class="line">const txHex = tx.build().toHex(); //生成hash</span><br><span class="line">return sendRawTransaction(txHex); //发送已打包签名的交易</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 获取实时链上手续费</span><br><span class="line"> */</span><br><span class="line">function getTransactionFee(inputCount, outputCount, maxFee) &#123;</span><br><span class="line">    return new Promise(function (resolve, reject) &#123;</span><br><span class="line">        estimateFee().then(function (price) &#123;</span><br><span class="line">            if (price &lt;= 0) &#123;</span><br><span class="line">                throw new Error(&apos;can not get fee&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">            var size = inputCount * 180 + outputCount * 34 + 10 - inputCount;</span><br><span class="line">            var fee = size * price / 1000;</span><br><span class="line">            //转换成聪</span><br><span class="line">            fee = parseInt(fee * 100000000);</span><br><span class="line">            if (fee &gt; maxFee) &#123;</span><br><span class="line">                fee = maxFee;</span><br><span class="line">            &#125;</span><br><span class="line">            resolve(fee);</span><br><span class="line">        &#125;).catch(function (err) &#123;</span><br><span class="line">            reject(err)</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 发送已打包签名的交易</span><br><span class="line"> * @param &#123;*打包签名后的交易&#125; txHex</span><br><span class="line"> */</span><br><span class="line">function sendRawTransaction(txHex) &#123;</span><br><span class="line">    return new Promise(function (resolve, reject) &#123;</span><br><span class="line">        if (!txHex) &#123;</span><br><span class="line">            reject(new Error(&apos;txHex is required&apos;));</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        client.sendRawTransaction(txHex, false, function (err, results) &#123;</span><br><span class="line">            if (err) &#123;</span><br><span class="line">                return reject(err);</span><br><span class="line">            &#125;</span><br><span class="line">            resolve(results);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下一部，会介绍node版本以太坊钱包开发..</p><p><a href="https://testnet.manu.backend.hamburg/faucet" target="_blank" rel="noopener">参考连接-测试网络发币</a><br><a href="https://testnet.blockchain.info" target="_blank" rel="noopener">btc测试网络</a><br><a href="https://www.blockchain.com/explorer" target="_blank" rel="noopener">btc网络</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1、BTC&quot;&gt;&lt;a href=&quot;#1、BTC&quot; class=&quot;headerlink&quot; title=&quot;1、BTC&quot;&gt;&lt;/a&gt;1、BTC&lt;/h2&gt;&lt;p&gt;比特币是一种点对点的电子现金系统。比特币是一种由开源的P2P软件产生的加密货币或电子货币。通俗点讲就是利用你挖矿设备的算力计算数学难题，在网络上确认交易，比特币网络会根据你解决数学难题的多少给你一定的的比特币奖励。&lt;/p&gt;
&lt;p&gt;BitCoin的概念最初由中本聪在2009年提出，根据中本聪的思路设计发布的开源软件以及建构其上的P2P网络。比特币是一种P2P形式的数字货币。点对点的传输意味着一个去中心化的支付系统。&lt;br&gt;与大多数货币不同，比特币不依靠特定货币机构发行，它依据特定算法，通过大量的计算产生，比特币经济使用整个P2P网络中众多节点构成的分布式数据库来确认并记录所有的交易行为，并使用密码学的设计来确保货币流通各个环节安全性。&lt;/p&gt;
&lt;p&gt;P2P的去中心化特性与算法本身可以确保无法通过大量制造比特币来人为操控币值。基于密码学的设计可以使比特币只能被真实的拥有者转移或支付。这同样确保了货币所有权与流通交易的匿名性。比特币与其他虚拟货币最大的不同，是其总数量非常有限，具有极强的稀缺性。该货币系统曾在4年内只有不超过1050万个，之后的总数量将被永久限制在2100万个。&lt;br&gt;比特币可以用来兑现，可以兑换成大多数国家的货币。使用者可以用比特币购买一些虚拟物品，比如网络游戏当中的衣服、帽子、装备等，只要有人接受，也可以使用比特币购买现实生活当中的物品。&lt;/p&gt;
&lt;p&gt;参考链接：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.8btc.com/wiki/bitcoin-a-peer-to-peer-electronic-cash-system/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;比特币白皮书&lt;/a&gt;、&lt;br&gt;&lt;a href=&quot;https://www.zhihu.com/question/20876219?rf=21949045&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;比特币是什么&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;2、BTC交易与钱包开发&quot;&gt;&lt;a href=&quot;#2、BTC交易与钱包开发&quot; class=&quot;headerlink&quot; title=&quot;2、BTC交易与钱包开发&quot;&gt;&lt;/a&gt;2、BTC交易与钱包开发&lt;/h2&gt;&lt;p&gt;目前有场外交易和场内交易两种，场外即OTC市场交易，选择靠谱买、卖家进行交易。场内是目前主流方式，包括各大交易所，火币，币安等；具体买卖不在这里说明。进行数字货币交易需要交易所，其中充值提现属于钱包开发。钱包开发是连接区块链的一个入口。目前比较成熟的公链，如比特币、以太坊都有很多钱包可以选择。一般钱包需要完全访问你的用户资产，也就是会要求你输入私钥。钱包的作恶成本极低，这也是笔者建议选择开源钱包的原因之一。&lt;/p&gt;
&lt;p&gt;其中btc开发，前提需要了解RPC。远程过程调用（英语：Remote Procedure Call，缩写为 RPC）是一个计算机通信协议。该协议允许运行于一台计算机的程序调用另一台计算机的子程序，而程序员无需额外地为这个交互作用编程。如果涉及的软件采用面向对象编程，那么远程过程调用亦可称作远程调用或远程方法调用。RPC 的主要功能目标是让构建分布式计算（应用）更容易，在提供强大的远程调用能力时不损失本地调用的语义简洁性。&lt;/p&gt;
&lt;p&gt;btc提供了一系列rpc接口，比如&lt;a href=&quot;https://en.bitcoin.it/wiki/Original_Bitcoin_client/API_calls_list&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RPC接口文档&lt;/a&gt;，以 sendrawtransaction 为例，这个函数列表提供了四列（Command、Parameters、Description、Requires unlocked wallet? ），分别表示函数名、传入参数、描述、是否需要解锁钱包。同时，为了保证安全性，我们还需要比特币的正式节点和测试节点，这样就可以利用 RPC 进行接口调用，来和区块链网络进行交互。&lt;/p&gt;
&lt;p&gt;参考链接：&lt;br&gt;&lt;a href=&quot;https://www.zhihu.com/question/266043467&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;btc交易&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;3、btc开发-node&quot;&gt;&lt;a href=&quot;#3、btc开发-node&quot; class=&quot;headerlink&quot; title=&quot;3、btc开发_node&quot;&gt;&lt;/a&gt;3、btc开发_node&lt;/h2&gt;&lt;p&gt;读完以上入门知识，接下来简单介绍下btc开发充值相关，nodeJs开发流程就不在这里详述。&lt;/p&gt;
&lt;h4 id=&quot;1-准备npm第三方依赖包。&quot;&gt;&lt;a href=&quot;#1-准备npm第三方依赖包。&quot; class=&quot;headerlink&quot; title=&quot;1. 准备npm第三方依赖包。&quot;&gt;&lt;/a&gt;1. 准备npm第三方依赖包。&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>markdown</title>
    <link href="http://yoursite.com/2018/08/01/markdown%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/08/01/markdown使用/</id>
    <published>2018-08-01T11:00:03.000Z</published>
    <updated>2018-09-09T09:29:43.455Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是-Markdown"><a href="#什么是-Markdown" class="headerlink" title="什么是 Markdown"></a>什么是 Markdown</h2><p>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong> 或者 <em>斜体</em> 某些文字，更棒的是，它还可以</p><h3 id="1-制作一份待办事宜-Todo-列表"><a href="#1-制作一份待办事宜-Todo-列表" class="headerlink" title="1. 制作一份待办事宜 Todo 列表"></a>1. 制作一份待办事宜 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-待办事宜-todo-列表" target="_blank" rel="noopener">Todo 列表</a></h3><ul><li style="list-style: none"><input type="checkbox"> 支持以 PDF 格式导出文稿</li><li style="list-style: none"><input type="checkbox"> 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li><li style="list-style: none"><input type="checkbox" checked> 新增 Todo 列表功能</li><li style="list-style: none"><input type="checkbox" checked> 修复 LaTex 公式渲染问题</li><li style="list-style: none"><input type="checkbox" checked> 新增 LaTex 公式编号功能</li></ul><h3 id="2-书写一个质能守恒公式-LaTeX"><a href="#2-书写一个质能守恒公式-LaTeX" class="headerlink" title="2. 书写一个质能守恒公式[^LaTeX]"></a>2. 书写一个质能守恒公式[^LaTeX]</h3><p>$$E=mc^2$$</p><h3 id="3-高亮一段代码-code"><a href="#3-高亮一段代码-code" class="headerlink" title="3. 高亮一段代码[^code]"></a>3. 高亮一段代码[^code]</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># A comment</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'hello world'</span></span><br></pre></td></tr></table></figure><h3 id="4-高效绘制-流程图"><a href="#4-高效绘制-流程图" class="headerlink" title="4. 高效绘制 流程图"></a>4. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-流程图" target="_blank" rel="noopener">流程图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: Start</span><br><span class="line">op=&gt;operation: Your Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">e=&gt;end</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="5-高效绘制-序列图"><a href="#5-高效绘制-序列图" class="headerlink" title="5. 高效绘制 序列图"></a>5. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-序列图" target="_blank" rel="noopener">序列图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Alice-&gt;Bob: Hello Bob, how are you?</span><br><span class="line">Note right of Bob: Bob thinks</span><br><span class="line">Bob--&gt;Alice: I am good thanks!</span><br></pre></td></tr></table></figure><h3 id="6-高效绘制-甘特图"><a href="#6-高效绘制-甘特图" class="headerlink" title="6. 高效绘制 甘特图"></a>6. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#9-甘特图" target="_blank" rel="noopener">甘特图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">title 项目开发流程</span><br><span class="line">section 项目确定</span><br><span class="line">    需求分析       :a1, 2016-06-22, 3d</span><br><span class="line">    可行性报告     :after a1, 5d</span><br><span class="line">    概念验证       : 5d</span><br><span class="line">section 项目实施</span><br><span class="line">    概要设计      :2016-07-05  , 5d</span><br><span class="line">    详细设计      :2016-07-08, 10d</span><br><span class="line">    编码          :2016-07-15, 10d</span><br><span class="line">    测试          :2016-07-22, 5d</span><br><span class="line">section 发布验收</span><br><span class="line">    发布: 2d</span><br><span class="line">    验收: 3d</span><br></pre></td></tr></table></figure><h3 id="7-绘制表格"><a href="#7-绘制表格" class="headerlink" title="7. 绘制表格"></a>7. 绘制表格</h3><table><thead><tr><th>项目</th><th style="text-align:right">价格</th><th style="text-align:center">数量</th></tr></thead><tbody><tr><td>计算机</td><td style="text-align:right">\$1600</td><td style="text-align:center">5</td></tr><tr><td>手机</td><td style="text-align:right">\$12</td><td style="text-align:center">12</td></tr><tr><td>管线</td><td style="text-align:right">\$1</td><td style="text-align:center">234</td></tr></tbody></table><h3 id="8-更详细语法说明"><a href="#8-更详细语法说明" class="headerlink" title="8. 更详细语法说明"></a>8. 更详细语法说明</h3><p>想要查看更详细的语法说明，可以参考我们准备的 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown" target="_blank" rel="noopener">Cmd Markdown 简明语法手册</a>，进阶用户可以参考 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-高阶语法手册" target="_blank" rel="noopener">Cmd Markdown 高阶语法手册</a> 了解更多高级功能。</p><p>总而言之，不同于其它 <em>所见即所得</em> 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。</p><hr><h2 id="什么是-Cmd-Markdown"><a href="#什么是-Cmd-Markdown" class="headerlink" title="什么是 Cmd Markdown"></a>什么是 Cmd Markdown</h2><p>您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 <strong>编辑/发布/阅读</strong> Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。</p><h3 id="1-实时同步预览"><a href="#1-实时同步预览" class="headerlink" title="1. 实时同步预览"></a>1. 实时同步预览</h3><p>我们将 Cmd Markdown 的主界面一分为二，左边为<strong>编辑区</strong>，右边为<strong>预览区</strong>，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！</p><h3 id="2-编辑工具栏"><a href="#2-编辑工具栏" class="headerlink" title="2. 编辑工具栏"></a>2. 编辑工具栏</h3><p>也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 <strong>编辑区</strong> 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。</p><p><img src="https://www.zybuluo.com/static/img/toolbar-editor.png" alt="tool-editor"></p><h3 id="3-编辑模式"><a href="#3-编辑模式" class="headerlink" title="3. 编辑模式"></a>3. 编辑模式</h3><p>完全心无旁骛的方式编辑文字：点击 <strong>编辑工具栏</strong> 最右侧的拉伸按钮或者按下 <code>Ctrl + M</code>，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！</p><h3 id="4-实时的云端文稿"><a href="#4-实时的云端文稿" class="headerlink" title="4. 实时的云端文稿"></a>4. 实时的云端文稿</h3><p>为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 <strong>编辑工具栏</strong> 的最右侧提示 <code>已保存</code> 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。</p><h3 id="5-离线模式"><a href="#5-离线模式" class="headerlink" title="5. 离线模式"></a>5. 离线模式</h3><p>在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。</p><h3 id="6-管理工具栏"><a href="#6-管理工具栏" class="headerlink" title="6. 管理工具栏"></a>6. 管理工具栏</h3><p>为了便于管理您的文稿，在 <strong>预览区</strong> 的顶部放置了如下所示的 <strong>管理工具栏</strong>：</p><p><img src="https://www.zybuluo.com/static/img/toolbar-manager.jpg" alt="tool-manager"></p><p>通过管理工具栏可以：</p><p><i class="icon-share"></i> 发布：将当前的文稿生成固定链接，在网络上发布，分享<br><i class="icon-file"></i> 新建：开始撰写一篇新的文稿<br><i class="icon-trash"></i> 删除：删除当前的文稿<br><i class="icon-cloud"></i> 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地<br><i class="icon-reorder"></i> 列表：所有新增和过往的文稿都可以在这里查看、操作<br><i class="icon-pencil"></i> 模式：切换 普通/Vim/Emacs 编辑模式</p><h3 id="7-阅读工具栏"><a href="#7-阅读工具栏" class="headerlink" title="7. 阅读工具栏"></a>7. 阅读工具栏</h3><p><img src="https://www.zybuluo.com/static/img/toolbar-reader.jpg" alt="tool-manager"></p><p>通过 <strong>预览区</strong> 右上角的 <strong>阅读工具栏</strong>，可以查看当前文稿的目录并增强阅读体验。</p><p>工具栏上的五个图标依次为：</p><p><i class="icon-list"></i> 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落<br><i class="icon-chevron-sign-left"></i> 视图：互换左边编辑区和右边预览区的位置<br><i class="icon-adjust"></i> 主题：内置了黑白两种模式的主题，试试 <strong>黑色主题</strong>，超炫！<br><i class="icon-desktop"></i> 阅读：心无旁骛的阅读模式提供超一流的阅读体验<br><i class="icon-fullscreen"></i> 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境</p><h3 id="8-阅读模式"><a href="#8-阅读模式" class="headerlink" title="8. 阅读模式"></a>8. 阅读模式</h3><p>在 <strong>阅读工具栏</strong> 点击 <i class="icon-desktop"></i> 或者按下 <code>Ctrl+Alt+M</code> 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。</p><h3 id="9-标签、分类和搜索"><a href="#9-标签、分类和搜索" class="headerlink" title="9. 标签、分类和搜索"></a>9. 标签、分类和搜索</h3><p>在编辑区任意行首位置输入以下格式的文字可以标签当前文档：</p><p>标签： 未分类</p><p>标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示：</p><p><img src="https://www.zybuluo.com/static/img/file-list.png" alt="file-list"></p><h3 id="10-文稿发布和分享"><a href="#10-文稿发布和分享" class="headerlink" title="10. 文稿发布和分享"></a>10. 文稿发布和分享</h3><p>在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 <i class="icon-share"></i> (Ctrl+Alt+P) 发布这份文档给好友吧！</p><hr><p>再一次感谢您花费时间阅读这份欢迎稿，点击 <i class="icon-file"></i> (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！</p><p>作者 <a href="http://weibo.com/ghosert" target="_blank" rel="noopener">@ghosert</a><br>2016 年 07月 07日</p><p>[^LaTeX]: 支持 <strong>LaTeX</strong> 编辑显示支持，例如：$\sum_{i=1}^n a_i=0$， 访问 <a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">MathJax</a> 参考更多使用方法。</p><p>[^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，<strong>四十一</strong>种主流编程语言。</p><h3 id="11-来源"><a href="#11-来源" class="headerlink" title="11. 来源"></a>11. 来源</h3><h3 id="本文转载自zybuluo"><a href="#本文转载自zybuluo" class="headerlink" title="本文转载自zybuluo"></a><a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="noopener">本文转载自zybuluo</a></h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;什么是-Markdown&quot;&gt;&lt;a href=&quot;#什么是-Markdown&quot; class=&quot;headerlink&quot; title=&quot;什么是 Markdown&quot;&gt;&lt;/a&gt;什么是 Markdown&lt;/h2&gt;&lt;p&gt;Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，&lt;strong&gt;粗体&lt;/strong&gt; 或者 &lt;em&gt;斜体&lt;/em&gt; 某些文字，更棒的是，它还可以&lt;/p&gt;
&lt;h3 id=&quot;1-制作一份待办事宜-Todo-列表&quot;&gt;&lt;a href=&quot;#1-制作一份待办事宜-Todo-列表&quot; class=&quot;headerlink&quot; title=&quot;1. 制作一份待办事宜 Todo 列表&quot;&gt;&lt;/a&gt;1. 制作一份待办事宜 &lt;a href=&quot;https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-待办事宜-todo-列表&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Todo 列表&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;checkbox&quot;&gt; 支持以 PDF 格式导出文稿&lt;/li&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;checkbox&quot;&gt; 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率&lt;/li&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;checkbox&quot; checked&gt; 新增 Todo 列表功能&lt;/li&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;checkbox&quot; checked&gt; 修复 LaTex 公式渲染问题&lt;/li&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;checkbox&quot; checked&gt; 新增 LaTex 公式编号功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2-书写一个质能守恒公式-LaTeX&quot;&gt;&lt;a href=&quot;#2-书写一个质能守恒公式-LaTeX&quot; class=&quot;headerlink&quot; title=&quot;2. 书写一个质能守恒公式[^LaTeX]&quot;&gt;&lt;/a&gt;2. 书写一个质能守恒公式[^LaTeX]&lt;/h3&gt;&lt;p&gt;$$E=mc^2$$&lt;/p&gt;
&lt;h3 id=&quot;3-高亮一段代码-code&quot;&gt;&lt;a href=&quot;#3-高亮一段代码-code&quot; class=&quot;headerlink&quot; title=&quot;3. 高亮一段代码[^code]&quot;&gt;&lt;/a&gt;3. 高亮一段代码[^code]&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@requires_authorization&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SomeClass&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# A comment&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;hello world&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;4-高效绘制-流程图&quot;&gt;&lt;a href=&quot;#4-高效绘制-流程图&quot; class=&quot;headerlink&quot; title=&quot;4. 高效绘制 流程图&quot;&gt;&lt;/a&gt;4. 高效绘制 &lt;a href=&quot;https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-流程图&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;流程图&lt;/a&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;st=&amp;gt;start: Start&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;op=&amp;gt;operation: Your Operation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cond=&amp;gt;condition: Yes or No?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e=&amp;gt;end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;st-&amp;gt;op-&amp;gt;cond&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cond(yes)-&amp;gt;e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cond(no)-&amp;gt;op&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
